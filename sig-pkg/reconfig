#!/bin/sh
################################################################################
#
# File:    reconfig
# Project: OpenSonATA
# Authors: The OpenSonATA code is the result of many programmers
#          over many years
#
# Copyright 2011 The SETI Institute
#
# OpenSonATA is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# OpenSonATA is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with OpenSonATA.  If not, see<http://www.gnu.org/licenses/>.
# 
# Implementers of this code are requested to include the caption
# "Licensed through SETI" with a link to setiQuest.org.
# 
# For alternate licensing arrangements, please contact
# The SETI Institute at www.seti.org or setiquest.org. 
#
################################################################################


# updates Makefile infrastructure

# usage:
#	./reconfig [--installdir <dir>]
#	--installdir <dir>: configure <dir> as the installation directory
#!/bin/sh 

###################################################################################
echo "Checking whether the system fulfils minimum requirements"
sleep 1    
quo=`awk 'match($1,"MemTotal") == 1 {print $2}' /proc/meminfo`
div=1048576
ram=`echo "scale=2;$a/$div" | bc`
if [ `echo "$ram < 3.8" | bc` -eq 1 ]
then
   echo "Insufficient ram to run the SonATA"
   sleep 1
   echo "But SonATA may be build though it will not run probably."
   echo "Would you like to continue building it?(y/n)(default n)"
   read choice 
   if [ -z "$choice" -o "$choice" != "y" -o $choice ! = Y ]
   then
      echo "Aborting the build"
      exit 1
   elif [ $choice = y -o $choice = Y ]
   then
   echo "Continuing with the build"
   fi
fi

cores_no=`cat /proc/cpuinfo | grep ^processor | wc -l`
if [ $cores_no -lt 3 ]
then
   echo "SonATA requires 2 cores to run. You seem to have only one."
   sleep 1
   echo "But SonATA may be build though it will not run probably."
   echo "Would you like to continue building it?(y/n)(default n)"
   read choice 
   if [ -z "$choice" -o "$choice" != "y" -o $choice ! = Y ]
   then
      echo "Aborting the build"
      exit 1
   elif [ $choice = y -o $choice = Y ]
   then
      echo "Continuing with the build"
   fi  
fi

defaultInstallDir="${HOME}/sonata_install"
installDir=${defaultInstallDir}
options=""

# process command line args
while [ "$1" ]
do
	if [ "$1" = "--installdir" ]
	then
		if [ "$2" = "" ]
		then
			echo "Must specify install directory name"
			exit
		fi
		installDir="$2"
		options = "${options} --prefix=${installDir}"
		shift

	else
		options="${options} $1"
	fi
	shift
done

# reconfigure the package

echo "libtoolize"
libtoolize --force --automake

echo "aclocal"
aclocal

echo "autoheader"
autoheader

echo "autoconf"
autoconf

echo "automake"
automake --add-missing --force-missing

echo "------- reconfiguring ATApackets -------"
cd ATApackets; ./reconfig; cd ..
echo "------- reconfiguring channelizer -------"
cd channelizer; ./reconfig; cd ..
echo "------- reconfiguring daddLib -------"
cd daddLib; ./reconfig; cd ..
echo "------- reconfiguring dfbLib -------"
cd dfbLib; ./reconfig; cd ..
echo "------- reconfiguring dx -------"
cd dx; ./reconfig; cd ..
echo "------- reconfiguring dfbLib -------"
cd dfbLib; ./reconfig; cd ..
echo "------- reconfiguring gaussLib -------"
cd gaussLib; ./reconfig; cd ..
echo "------- reconfiguring sonataLib -------"
cd sonataLib; ./reconfig; cd ..
echo "------- reconfiguring spectraLib -------"
cd spectraLib; ./reconfig; cd ..
echo "------- reconfiguring utilities -------"
cd utilities; ./reconfig; cd ..

./configure --enable-maintainer-mode ${options}

